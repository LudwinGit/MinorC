
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftABSOLUTOleftMASMENOSleftMULDIVrightNEGATIVOABRECORCHETE ABRELLAVE ABREPARENTESIS ABS AMPERSAN AND AUTO BITWISEAND BITWISEEXCLUSIVE BITWISEINCLUSIVE BREAK CADENA CASE CHAR CIERRACORCHETE CIERRALLAVE CIERRAPARENTESIS COMA COMPARACION CONST CONTINUE DECIMAL DECREMENTO DEFAULT DIFERENTE DIV DIVIDEAND DO DOSPUNTOS DOUBLE ELSE ENTERO ENUM EXTERN FALSE FLOAT FOR GOTO IDENTIFICADOR IF IGUAL INCREMENTO INT LEFTSHIFTAND MAS MAYOR MAYORIGUAL MENOR MENORIGUAL MENOS MODULUSAND MUL MULTIPLYAND NOT NOTBIT OR ORBIT PRINT PUNTO PUNTOCOMA REGISTER RESIDUO RETURN RIGHTSHIFTAND SCANF SHIFTDER SHIFTIZQ SIZEOF STRUCT SWITCH TERNARIO TRUE VOID WHILE XOR XORBITinicio                     :   lista_instruccioneslista_instrucciones        :   lista_instrucciones instruccionlista_instrucciones        :   instruccioninstruccion              :   instruccion_funcion\n                                |   declaracion_variable\n                                |   definir_stuctdefinir_stuct            :   STRUCT IDENTIFICADOR declaracion_compuesta PUNTOCOMAinstruccion_funcion        :   tipo IDENTIFICADOR ABREPARENTESIS params CIERRAPARENTESIS declaracion_compuestainstruccion_funcion        :   tipo IDENTIFICADOR ABREPARENTESIS CIERRAPARENTESIS declaracion_compuestadeclaracion_compuesta      :   ABRELLAVE lista_sentencias CIERRALLAVEdeclaracion_compuesta      :   ABRELLAVE CIERRALLAVElista_sentencias           :   lista_sentencias sentencialista_sentencias           :   sentenciasentencia                :   declaracion_variable\n                                |   definir_stuct\n                                |   declaracion_struct\n                                |   sentencia_asignacion\n                                |   sentencia_asignacion_struct\n                                |   sentencia_while\n                                |   sentencia_if\n                                |   sentencia_for\n                                |   sentencia_etiqueta\n                                |   sentencia_gotodeclaracion_variable       :   tipo IDENTIFICADOR indices PUNTOCOMAdeclaracion_variable       :   tipo identificadores PUNTOCOMAidentificadores            :   lista_identificadoreslista_identificadores      :   lista_identificadores COMA declaracion_identificadorlista_identificadores      :   declaracion_identificadordeclaracion_identificador    :   IDENTIFICADOR\n                                    |   IDENTIFICADOR IGUAL expdeclaracion_identificador    :   MUL IDENTIFICADOR\n                                    |   MUL MUL IDENTIFICADORsentencia_asignacion       :   IDENTIFICADOR asignacion_compuesta exp PUNTOCOMAsentencia_asignacion       :   IDENTIFICADOR indices asignacion_compuesta exp PUNTOCOMAsentencia_while            :   WHILE ABREPARENTESIS exp CIERRAPARENTESIS declaracion_compuestasentencia_if               :   IF ABREPARENTESIS exp CIERRAPARENTESIS declaracion_compuestasentencia_if               :   IF ABREPARENTESIS exp CIERRAPARENTESIS declaracion_compuesta listado_elselistado_else               :   listado_else  ifelselistado_else               :   ifelseifelse                     :   ELSE declaracion_compuestaifelse                     :   ELSE IF ABREPARENTESIS exp CIERRAPARENTESIS declaracion_compuestasentencia_for              :   FOR ABREPARENTESIS exp PUNTOCOMA exp PUNTOCOMA exp CIERRAPARENTESIS declaracion_compuestadeclaracion_struct         :   STRUCT IDENTIFICADOR IDENTIFICADOR PUNTOCOMAdeclaracion_struct         :   STRUCT IDENTIFICADOR IDENTIFICADOR indices PUNTOCOMAsentencia_asignacion_struct    :   IDENTIFICADOR PUNTO IDENTIFICADOR IGUAL exp PUNTOCOMAsentencia_etiqueta         :   IDENTIFICADOR DOSPUNTOSsentencia_goto             :   GOTO IDENTIFICADOR PUNTOCOMAexp                      :   exp MAS         exp\n                                |   exp MENOS       exp\n                                |   exp MUL         exp\n                                |   exp DIV         exp\n                                |   exp RESIDUO     exp\n                                |   exp AND         exp\n                                |   exp OR          exp\n                                |   exp XOR         exp\n                                |   exp COMPARACION exp\n                                |   exp DIFERENTE   exp\n                                |   exp MAYORIGUAL  exp\n                                |   exp MENORIGUAL  exp\n                                |   exp MAYOR       exp\n                                |   exp MENOR       exp\n                                |   exp AMPERSAN    exp\n                                |   exp ORBIT       exp\n                                |   exp XORBIT      exp\n                                |   exp SHIFTIZQ    exp\n                                |   exp SHIFTDER    exp\n                                exp                        :   MENOS exp %prec NEGATIVOexp                        :   ABS ABREPARENTESIS exp CIERRAPARENTESIS %prec ABSOLUTOexp                        :   NOT expexp                        :   NOTBIT expexp                        :   ABREPARENTESIS exp CIERRAPARENTESISexp                      :   ENTERO\n                                |   DECIMALexp                      :   IDENTIFICADORexp                      :   AMPERSAN IDENTIFICADORexp                        :   IDENTIFICADOR indicesexp                        :   SIZEOF ABREPARENTESIS exp CIERRAPARENTESISexp                        :   ABREPARENTESIS tipo_variable CIERRAPARENTESIS expexp                        :   IDENTIFICADOR ABREPARENTESIS CIERRAPARENTESISexp                        :   exp TERNARIO exp DOSPUNTOS expexp                        :   CADENAparams                     :   param_listparam_list                 :   param_list COMA paramparam_list                 :   paramparam                    :   tipo IDENTIFICADOR\n                                |   tipo IDENTIFICADOR ABRECORCHETE CIERRACORCHETEindices                    :   indices indiceindices                    :   indiceindice                     :   ABRECORCHETE exp  CIERRACORCHETEtipo                     :   INT\n                                |   VOID\n                                |   CHAR\n                                |   DOUBLE\n                                |   FLOATtipo_variable        :   INT\n                            |   FLOAT\n                            |   CHAR\n                            |   DOUBLEasignacion_compuesta     :   IGUAL\n                                |   INCREMENTO\n                                |   DECREMENTO\n                                |   MULTIPLYAND\n                                |   DIVIDEAND\n                                |   MODULUSAND\n                                |   LEFTSHIFTAND\n                                |   RIGHTSHIFTAND\n                                |   BITWISEAND\n                                |   BITWISEEXCLUSIVE\n                                |   BITWISEINCLUSIVE'
    
_lr_action_items = {'STRUCT':([0,2,3,4,5,6,14,26,31,37,55,56,57,58,59,60,61,62,63,64,65,66,67,68,78,115,116,122,139,173,179,182,188,190,191,192,194,195,196,199,200,206,208,],[8,8,-3,-4,-5,-6,-2,-25,71,-24,-7,71,-11,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-9,-10,-12,-46,-8,-47,-33,-43,-34,-44,-35,-36,-45,-37,-39,-38,-40,-42,-41,]),'INT':([0,2,3,4,5,6,14,21,26,31,37,44,55,56,57,58,59,60,61,62,63,64,65,66,67,68,78,79,115,116,122,139,173,179,182,188,190,191,192,194,195,196,199,200,206,208,],[9,9,-3,-4,-5,-6,-2,9,-25,9,-24,107,-7,9,-11,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-9,9,-10,-12,-46,-8,-47,-33,-43,-34,-44,-35,-36,-45,-37,-39,-38,-40,-42,-41,]),'VOID':([0,2,3,4,5,6,14,21,26,31,37,55,56,57,58,59,60,61,62,63,64,65,66,67,68,78,79,115,116,122,139,173,179,182,188,190,191,192,194,195,196,199,200,206,208,],[10,10,-3,-4,-5,-6,-2,10,-25,10,-24,-7,10,-11,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-9,10,-10,-12,-46,-8,-47,-33,-43,-34,-44,-35,-36,-45,-37,-39,-38,-40,-42,-41,]),'CHAR':([0,2,3,4,5,6,14,21,26,31,37,44,55,56,57,58,59,60,61,62,63,64,65,66,67,68,78,79,115,116,122,139,173,179,182,188,190,191,192,194,195,196,199,200,206,208,],[11,11,-3,-4,-5,-6,-2,11,-25,11,-24,109,-7,11,-11,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-9,11,-10,-12,-46,-8,-47,-33,-43,-34,-44,-35,-36,-45,-37,-39,-38,-40,-42,-41,]),'DOUBLE':([0,2,3,4,5,6,14,21,26,31,37,44,55,56,57,58,59,60,61,62,63,64,65,66,67,68,78,79,115,116,122,139,173,179,182,188,190,191,192,194,195,196,199,200,206,208,],[12,12,-3,-4,-5,-6,-2,12,-25,12,-24,110,-7,12,-11,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-9,12,-10,-12,-46,-8,-47,-33,-43,-34,-44,-35,-36,-45,-37,-39,-38,-40,-42,-41,]),'FLOAT':([0,2,3,4,5,6,14,21,26,31,37,44,55,56,57,58,59,60,61,62,63,64,65,66,67,68,78,79,115,116,122,139,173,179,182,188,190,191,192,194,195,196,199,200,206,208,],[13,13,-3,-4,-5,-6,-2,13,-25,13,-24,108,-7,13,-11,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-9,13,-10,-12,-46,-8,-47,-33,-43,-34,-44,-35,-36,-45,-37,-39,-38,-40,-42,-41,]),'$end':([1,2,3,4,5,6,14,26,37,55,57,78,115,139,],[0,-1,-3,-4,-5,-6,-2,-25,-24,-7,-11,-9,-10,-8,]),'IDENTIFICADOR':([7,8,9,10,11,12,13,19,23,25,26,27,28,31,32,37,41,42,44,45,46,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,71,75,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,104,113,115,116,118,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,164,167,173,175,179,181,182,186,188,190,191,192,194,195,196,198,199,200,203,206,208,],[15,20,-90,-91,-92,-93,-94,29,39,39,-25,53,54,70,76,-24,39,103,39,39,39,-7,70,-11,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,117,133,137,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,-10,-12,39,168,-99,-46,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,169,39,39,39,39,39,-47,39,-33,39,-43,39,-34,-44,-35,-36,-45,-37,-39,39,-38,-40,39,-42,-41,]),'MUL':([7,9,10,11,12,13,19,24,27,38,39,40,47,48,50,51,69,80,102,103,105,111,112,114,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,165,166,170,171,172,176,177,178,180,187,189,193,202,205,],[19,-90,-91,-92,-93,-94,28,-88,19,-87,-74,84,-72,-73,-81,84,19,-76,-67,-75,84,84,84,-89,-79,84,84,-50,-51,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,-71,84,84,84,84,84,-68,84,-77,84,84,84,84,84,84,]),'ABREPARENTESIS':([15,23,25,39,41,43,44,45,46,49,72,73,74,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,104,113,118,121,123,124,125,126,127,128,129,130,131,132,134,135,136,164,167,175,181,186,198,201,203,],[21,44,44,81,44,104,44,44,44,113,134,135,136,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,44,44,44,44,44,44,44,44,44,203,44,]),'COMA':([15,17,18,24,29,35,36,38,39,40,47,48,50,52,53,54,76,80,102,103,111,112,114,117,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,163,174,176,177,178,187,],[-29,27,-28,-88,-31,79,-84,-87,-74,-30,-72,-73,-81,-27,-29,-32,-85,-76,-67,-75,-69,-70,-89,-29,-83,-79,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-71,-86,-68,-78,-77,-80,]),'PUNTOCOMA':([15,16,17,18,22,24,29,30,38,39,40,47,48,50,52,53,54,57,80,102,103,111,112,114,115,117,137,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,163,166,169,172,176,177,178,180,183,187,189,193,],[-29,26,-26,-28,37,-88,-31,55,-87,-74,-30,-72,-73,-81,-27,-29,-32,-11,-76,-67,-75,-69,-70,-89,-10,-29,173,-79,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-71,179,182,186,-68,-78,-77,188,190,-80,194,198,]),'IGUAL':([15,24,38,53,70,114,117,119,168,],[23,-88,-87,23,121,-89,23,121,181,]),'ABRECORCHETE':([15,22,24,38,39,70,76,80,114,117,119,169,183,],[25,25,-88,-87,25,25,138,25,-89,25,25,25,25,]),'ABRELLAVE':([20,34,77,133,184,185,197,204,207,],[31,31,31,31,31,31,31,31,31,]),'CIERRAPARENTESIS':([21,24,33,35,36,38,39,47,48,50,76,80,81,102,103,105,106,107,108,109,110,111,112,114,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,162,163,165,170,171,174,176,177,178,187,202,205,],[34,-88,77,-82,-84,-87,-74,-72,-73,-81,-85,-76,141,-67,-75,163,164,-95,-96,-97,-98,-69,-70,-89,-83,-79,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,176,-71,178,184,185,-86,-68,-78,-77,-80,204,207,]),'MENOS':([23,24,25,38,39,40,41,44,45,46,47,48,50,51,80,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,111,112,113,114,118,121,123,124,125,126,127,128,129,130,131,132,134,135,136,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,170,171,172,175,176,177,178,180,181,186,187,189,193,198,202,203,205,],[41,-88,41,-87,-74,83,41,41,41,41,-72,-73,-81,83,-76,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,-67,-75,41,83,83,83,41,-89,41,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,41,41,41,-79,-48,-49,-50,-51,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,-71,41,83,83,41,83,83,83,41,-68,83,-77,83,41,41,83,83,83,41,83,41,83,]),'ABS':([23,25,41,44,45,46,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,104,113,118,121,123,124,125,126,127,128,129,130,131,132,134,135,136,164,167,175,181,186,198,203,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,43,43,43,43,43,43,43,43,43,43,]),'NOT':([23,25,41,44,45,46,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,104,113,118,121,123,124,125,126,127,128,129,130,131,132,134,135,136,164,167,175,181,186,198,203,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,45,45,45,45,45,45,45,45,45,45,]),'NOTBIT':([23,25,41,44,45,46,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,104,113,118,121,123,124,125,126,127,128,129,130,131,132,134,135,136,164,167,175,181,186,198,203,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,46,46,46,46,46,46,46,46,46,46,]),'ENTERO':([23,25,41,44,45,46,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,104,113,118,121,123,124,125,126,127,128,129,130,131,132,134,135,136,164,167,175,181,186,198,203,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,47,47,47,47,47,47,47,47,47,47,]),'DECIMAL':([23,25,41,44,45,46,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,104,113,118,121,123,124,125,126,127,128,129,130,131,132,134,135,136,164,167,175,181,186,198,203,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,48,48,48,48,48,48,48,48,48,48,]),'AMPERSAN':([23,24,25,38,39,40,41,44,45,46,47,48,50,51,80,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,111,112,113,114,118,121,123,124,125,126,127,128,129,130,131,132,134,135,136,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,170,171,172,175,176,177,178,180,181,186,187,189,193,198,202,203,205,],[42,-88,42,-87,-74,96,42,42,42,42,-72,-73,-81,96,-76,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,-67,-75,42,96,96,96,42,-89,42,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,42,42,42,-79,-48,-49,-50,-51,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,-71,42,96,96,42,96,96,96,42,-68,96,-77,96,42,42,96,96,96,42,96,42,96,]),'SIZEOF':([23,25,41,44,45,46,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,104,113,118,121,123,124,125,126,127,128,129,130,131,132,134,135,136,164,167,175,181,186,198,203,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,49,49,49,49,49,49,49,49,49,49,]),'CADENA':([23,25,41,44,45,46,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,104,113,118,121,123,124,125,126,127,128,129,130,131,132,134,135,136,164,167,175,181,186,198,203,],[50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,50,50,50,50,50,50,50,50,50,50,]),'MAS':([24,38,39,40,47,48,50,51,80,102,103,105,111,112,114,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,165,166,170,171,172,176,177,178,180,187,189,193,202,205,],[-88,-87,-74,82,-72,-73,-81,82,-76,-67,-75,82,82,82,-89,-79,-48,-49,-50,-51,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,-71,82,82,82,82,82,-68,82,-77,82,82,82,82,82,82,]),'DIV':([24,38,39,40,47,48,50,51,80,102,103,105,111,112,114,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,165,166,170,171,172,176,177,178,180,187,189,193,202,205,],[-88,-87,-74,85,-72,-73,-81,85,-76,-67,-75,85,85,85,-89,-79,85,85,-50,-51,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,-71,85,85,85,85,85,-68,85,-77,85,85,85,85,85,85,]),'RESIDUO':([24,38,39,40,47,48,50,51,80,102,103,105,111,112,114,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,165,166,170,171,172,176,177,178,180,187,189,193,202,205,],[-88,-87,-74,86,-72,-73,-81,86,-76,-67,-75,86,86,86,-89,-79,-48,-49,-50,-51,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,-71,86,86,86,86,86,-68,86,-77,86,86,86,86,86,86,]),'AND':([24,38,39,40,47,48,50,51,80,102,103,105,111,112,114,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,165,166,170,171,172,176,177,178,180,187,189,193,202,205,],[-88,-87,-74,87,-72,-73,-81,87,-76,-67,-75,87,87,87,-89,-79,-48,-49,-50,-51,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,-71,87,87,87,87,87,-68,87,-77,87,87,87,87,87,87,]),'OR':([24,38,39,40,47,48,50,51,80,102,103,105,111,112,114,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,165,166,170,171,172,176,177,178,180,187,189,193,202,205,],[-88,-87,-74,88,-72,-73,-81,88,-76,-67,-75,88,88,88,-89,-79,-48,-49,-50,-51,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,-71,88,88,88,88,88,-68,88,-77,88,88,88,88,88,88,]),'XOR':([24,38,39,40,47,48,50,51,80,102,103,105,111,112,114,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,165,166,170,171,172,176,177,178,180,187,189,193,202,205,],[-88,-87,-74,89,-72,-73,-81,89,-76,-67,-75,89,89,89,-89,-79,-48,-49,-50,-51,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,-71,89,89,89,89,89,-68,89,-77,89,89,89,89,89,89,]),'COMPARACION':([24,38,39,40,47,48,50,51,80,102,103,105,111,112,114,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,165,166,170,171,172,176,177,178,180,187,189,193,202,205,],[-88,-87,-74,90,-72,-73,-81,90,-76,-67,-75,90,90,90,-89,-79,-48,-49,-50,-51,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,-71,90,90,90,90,90,-68,90,-77,90,90,90,90,90,90,]),'DIFERENTE':([24,38,39,40,47,48,50,51,80,102,103,105,111,112,114,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,165,166,170,171,172,176,177,178,180,187,189,193,202,205,],[-88,-87,-74,91,-72,-73,-81,91,-76,-67,-75,91,91,91,-89,-79,-48,-49,-50,-51,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,-71,91,91,91,91,91,-68,91,-77,91,91,91,91,91,91,]),'MAYORIGUAL':([24,38,39,40,47,48,50,51,80,102,103,105,111,112,114,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,165,166,170,171,172,176,177,178,180,187,189,193,202,205,],[-88,-87,-74,92,-72,-73,-81,92,-76,-67,-75,92,92,92,-89,-79,-48,-49,-50,-51,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,-71,92,92,92,92,92,-68,92,-77,92,92,92,92,92,92,]),'MENORIGUAL':([24,38,39,40,47,48,50,51,80,102,103,105,111,112,114,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,165,166,170,171,172,176,177,178,180,187,189,193,202,205,],[-88,-87,-74,93,-72,-73,-81,93,-76,-67,-75,93,93,93,-89,-79,-48,-49,-50,-51,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,-71,93,93,93,93,93,-68,93,-77,93,93,93,93,93,93,]),'MAYOR':([24,38,39,40,47,48,50,51,80,102,103,105,111,112,114,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,165,166,170,171,172,176,177,178,180,187,189,193,202,205,],[-88,-87,-74,94,-72,-73,-81,94,-76,-67,-75,94,94,94,-89,-79,-48,-49,-50,-51,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,-71,94,94,94,94,94,-68,94,-77,94,94,94,94,94,94,]),'MENOR':([24,38,39,40,47,48,50,51,80,102,103,105,111,112,114,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,165,166,170,171,172,176,177,178,180,187,189,193,202,205,],[-88,-87,-74,95,-72,-73,-81,95,-76,-67,-75,95,95,95,-89,-79,-48,-49,-50,-51,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,-71,95,95,95,95,95,-68,95,-77,95,95,95,95,95,95,]),'ORBIT':([24,38,39,40,47,48,50,51,80,102,103,105,111,112,114,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,165,166,170,171,172,176,177,178,180,187,189,193,202,205,],[-88,-87,-74,97,-72,-73,-81,97,-76,-67,-75,97,97,97,-89,-79,-48,-49,-50,-51,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,-71,97,97,97,97,97,-68,97,-77,97,97,97,97,97,97,]),'XORBIT':([24,38,39,40,47,48,50,51,80,102,103,105,111,112,114,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,165,166,170,171,172,176,177,178,180,187,189,193,202,205,],[-88,-87,-74,98,-72,-73,-81,98,-76,-67,-75,98,98,98,-89,-79,-48,-49,-50,-51,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,-71,98,98,98,98,98,-68,98,-77,98,98,98,98,98,98,]),'SHIFTIZQ':([24,38,39,40,47,48,50,51,80,102,103,105,111,112,114,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,165,166,170,171,172,176,177,178,180,187,189,193,202,205,],[-88,-87,-74,99,-72,-73,-81,99,-76,-67,-75,99,99,99,-89,-79,-48,-49,-50,-51,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,-71,99,99,99,99,99,-68,99,-77,99,99,99,99,99,99,]),'SHIFTDER':([24,38,39,40,47,48,50,51,80,102,103,105,111,112,114,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,165,166,170,171,172,176,177,178,180,187,189,193,202,205,],[-88,-87,-74,100,-72,-73,-81,100,-76,-67,-75,100,100,100,-89,-79,-48,-49,-50,-51,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,-71,100,100,100,100,100,-68,100,-77,100,100,100,100,100,100,]),'TERNARIO':([24,38,39,40,47,48,50,51,80,102,103,105,111,112,114,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,165,166,170,171,172,176,177,178,180,187,189,193,202,205,],[-88,-87,-74,101,-72,-73,-81,101,-76,-67,-75,101,101,101,-89,-79,-48,-49,-50,-51,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,-71,101,101,101,101,101,-68,101,-77,101,101,101,101,101,101,]),'CIERRACORCHETE':([24,38,39,47,48,50,51,80,102,103,111,112,114,138,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,163,176,177,178,187,],[-88,-87,-74,-72,-73,-81,114,-76,-67,-75,-69,-70,-89,174,-79,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-71,-68,-78,-77,-80,]),'DOSPUNTOS':([24,38,39,47,48,50,70,80,102,103,111,112,114,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,163,176,177,178,187,],[-88,-87,-74,-72,-73,-81,122,-76,-67,-75,-69,-70,-89,-79,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,175,-71,-68,-78,-77,-80,]),'INCREMENTO':([24,38,70,114,119,],[-88,-87,123,-89,123,]),'DECREMENTO':([24,38,70,114,119,],[-88,-87,124,-89,124,]),'MULTIPLYAND':([24,38,70,114,119,],[-88,-87,125,-89,125,]),'DIVIDEAND':([24,38,70,114,119,],[-88,-87,126,-89,126,]),'MODULUSAND':([24,38,70,114,119,],[-88,-87,127,-89,127,]),'LEFTSHIFTAND':([24,38,70,114,119,],[-88,-87,128,-89,128,]),'RIGHTSHIFTAND':([24,38,70,114,119,],[-88,-87,129,-89,129,]),'BITWISEAND':([24,38,70,114,119,],[-88,-87,130,-89,130,]),'BITWISEEXCLUSIVE':([24,38,70,114,119,],[-88,-87,131,-89,131,]),'BITWISEINCLUSIVE':([24,38,70,114,119,],[-88,-87,132,-89,132,]),'CIERRALLAVE':([26,31,37,55,56,57,58,59,60,61,62,63,64,65,66,67,68,115,116,122,173,179,182,188,190,191,192,194,195,196,199,200,206,208,],[-25,57,-24,-7,115,-11,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-10,-12,-46,-47,-33,-43,-34,-44,-35,-36,-45,-37,-39,-38,-40,-42,-41,]),'WHILE':([26,31,37,55,56,57,58,59,60,61,62,63,64,65,66,67,68,115,116,122,173,179,182,188,190,191,192,194,195,196,199,200,206,208,],[-25,72,-24,-7,72,-11,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-10,-12,-46,-47,-33,-43,-34,-44,-35,-36,-45,-37,-39,-38,-40,-42,-41,]),'IF':([26,31,37,55,56,57,58,59,60,61,62,63,64,65,66,67,68,115,116,122,173,179,182,188,190,191,192,194,195,196,197,199,200,206,208,],[-25,73,-24,-7,73,-11,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-10,-12,-46,-47,-33,-43,-34,-44,-35,-36,-45,-37,-39,201,-38,-40,-42,-41,]),'FOR':([26,31,37,55,56,57,58,59,60,61,62,63,64,65,66,67,68,115,116,122,173,179,182,188,190,191,192,194,195,196,199,200,206,208,],[-25,74,-24,-7,74,-11,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-10,-12,-46,-47,-33,-43,-34,-44,-35,-36,-45,-37,-39,-38,-40,-42,-41,]),'GOTO':([26,31,37,55,56,57,58,59,60,61,62,63,64,65,66,67,68,115,116,122,173,179,182,188,190,191,192,194,195,196,199,200,206,208,],[-25,75,-24,-7,75,-11,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-10,-12,-46,-47,-33,-43,-34,-44,-35,-36,-45,-37,-39,-38,-40,-42,-41,]),'ELSE':([57,115,192,195,196,199,200,208,],[-11,-10,197,197,-39,-38,-40,-41,]),'PUNTO':([70,],[120,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'inicio':([0,],[1,]),'lista_instrucciones':([0,],[2,]),'instruccion':([0,2,],[3,14,]),'instruccion_funcion':([0,2,],[4,4,]),'declaracion_variable':([0,2,31,56,],[5,5,59,59,]),'definir_stuct':([0,2,31,56,],[6,6,60,60,]),'tipo':([0,2,21,31,56,79,],[7,7,32,69,69,32,]),'identificadores':([7,69,],[16,16,]),'lista_identificadores':([7,69,],[17,17,]),'declaracion_identificador':([7,27,69,],[18,52,18,]),'indices':([15,39,70,117,169,],[22,80,119,22,183,]),'indice':([15,22,39,70,80,117,119,169,183,],[24,38,24,24,38,24,38,24,38,]),'declaracion_compuesta':([20,34,77,133,184,185,197,204,207,],[30,78,139,30,191,192,200,206,208,]),'params':([21,],[33,]),'param_list':([21,],[35,]),'param':([21,79,],[36,140,]),'exp':([23,25,41,44,45,46,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,104,113,118,134,135,136,164,167,175,181,186,198,203,],[40,51,102,105,111,112,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,165,166,170,171,172,177,180,187,189,193,202,205,]),'lista_sentencias':([31,],[56,]),'sentencia':([31,56,],[58,116,]),'declaracion_struct':([31,56,],[61,61,]),'sentencia_asignacion':([31,56,],[62,62,]),'sentencia_asignacion_struct':([31,56,],[63,63,]),'sentencia_while':([31,56,],[64,64,]),'sentencia_if':([31,56,],[65,65,]),'sentencia_for':([31,56,],[66,66,]),'sentencia_etiqueta':([31,56,],[67,67,]),'sentencia_goto':([31,56,],[68,68,]),'tipo_variable':([44,],[106,]),'asignacion_compuesta':([70,119,],[118,167,]),'listado_else':([192,],[195,]),'ifelse':([192,195,],[196,199,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> inicio","S'",1,None,None,None),
  ('inicio -> lista_instrucciones','inicio',1,'p_inicio','gramaticaC.py',163),
  ('lista_instrucciones -> lista_instrucciones instruccion','lista_instrucciones',2,'p_lista_instrucciones','gramaticaC.py',167),
  ('lista_instrucciones -> instruccion','lista_instrucciones',1,'p_lista_instrucciones_instruccion','gramaticaC.py',170),
  ('instruccion -> instruccion_funcion','instruccion',1,'p_instruccion','gramaticaC.py',173),
  ('instruccion -> declaracion_variable','instruccion',1,'p_instruccion','gramaticaC.py',174),
  ('instruccion -> definir_stuct','instruccion',1,'p_instruccion','gramaticaC.py',175),
  ('definir_stuct -> STRUCT IDENTIFICADOR declaracion_compuesta PUNTOCOMA','definir_stuct',4,'p_definir_stuct','gramaticaC.py',178),
  ('instruccion_funcion -> tipo IDENTIFICADOR ABREPARENTESIS params CIERRAPARENTESIS declaracion_compuesta','instruccion_funcion',6,'p_instruccion_funcion','gramaticaC.py',181),
  ('instruccion_funcion -> tipo IDENTIFICADOR ABREPARENTESIS CIERRAPARENTESIS declaracion_compuesta','instruccion_funcion',5,'p_instruccion_funcion_sin_params','gramaticaC.py',185),
  ('declaracion_compuesta -> ABRELLAVE lista_sentencias CIERRALLAVE','declaracion_compuesta',3,'p_declaracion_compuesta','gramaticaC.py',188),
  ('declaracion_compuesta -> ABRELLAVE CIERRALLAVE','declaracion_compuesta',2,'p_declaracion_compuesta_empty','gramaticaC.py',191),
  ('lista_sentencias -> lista_sentencias sentencia','lista_sentencias',2,'p_lista_sentencias','gramaticaC.py',194),
  ('lista_sentencias -> sentencia','lista_sentencias',1,'p_lista_sentencias_sentencia','gramaticaC.py',197),
  ('sentencia -> declaracion_variable','sentencia',1,'p_sentencia','gramaticaC.py',200),
  ('sentencia -> definir_stuct','sentencia',1,'p_sentencia','gramaticaC.py',201),
  ('sentencia -> declaracion_struct','sentencia',1,'p_sentencia','gramaticaC.py',202),
  ('sentencia -> sentencia_asignacion','sentencia',1,'p_sentencia','gramaticaC.py',203),
  ('sentencia -> sentencia_asignacion_struct','sentencia',1,'p_sentencia','gramaticaC.py',204),
  ('sentencia -> sentencia_while','sentencia',1,'p_sentencia','gramaticaC.py',205),
  ('sentencia -> sentencia_if','sentencia',1,'p_sentencia','gramaticaC.py',206),
  ('sentencia -> sentencia_for','sentencia',1,'p_sentencia','gramaticaC.py',207),
  ('sentencia -> sentencia_etiqueta','sentencia',1,'p_sentencia','gramaticaC.py',208),
  ('sentencia -> sentencia_goto','sentencia',1,'p_sentencia','gramaticaC.py',209),
  ('declaracion_variable -> tipo IDENTIFICADOR indices PUNTOCOMA','declaracion_variable',4,'p_declaracion_variable_array','gramaticaC.py',215),
  ('declaracion_variable -> tipo identificadores PUNTOCOMA','declaracion_variable',3,'p_multiple_declaracion','gramaticaC.py',218),
  ('identificadores -> lista_identificadores','identificadores',1,'p_identificadores','gramaticaC.py',221),
  ('lista_identificadores -> lista_identificadores COMA declaracion_identificador','lista_identificadores',3,'p_lista_identificadores','gramaticaC.py',224),
  ('lista_identificadores -> declaracion_identificador','lista_identificadores',1,'p_lista_identificadores_identificador','gramaticaC.py',227),
  ('declaracion_identificador -> IDENTIFICADOR','declaracion_identificador',1,'p_declaracion_identificador','gramaticaC.py',230),
  ('declaracion_identificador -> IDENTIFICADOR IGUAL exp','declaracion_identificador',3,'p_declaracion_identificador','gramaticaC.py',231),
  ('declaracion_identificador -> MUL IDENTIFICADOR','declaracion_identificador',2,'p_declaracion_identificador_puntero','gramaticaC.py',234),
  ('declaracion_identificador -> MUL MUL IDENTIFICADOR','declaracion_identificador',3,'p_declaracion_identificador_puntero','gramaticaC.py',235),
  ('sentencia_asignacion -> IDENTIFICADOR asignacion_compuesta exp PUNTOCOMA','sentencia_asignacion',4,'p_sentencia_asignacion','gramaticaC.py',238),
  ('sentencia_asignacion -> IDENTIFICADOR indices asignacion_compuesta exp PUNTOCOMA','sentencia_asignacion',5,'p_sentencia_asignacion_arreglo','gramaticaC.py',241),
  ('sentencia_while -> WHILE ABREPARENTESIS exp CIERRAPARENTESIS declaracion_compuesta','sentencia_while',5,'p_sentencia_while','gramaticaC.py',244),
  ('sentencia_if -> IF ABREPARENTESIS exp CIERRAPARENTESIS declaracion_compuesta','sentencia_if',5,'p_sentencia_if','gramaticaC.py',247),
  ('sentencia_if -> IF ABREPARENTESIS exp CIERRAPARENTESIS declaracion_compuesta listado_else','sentencia_if',6,'p_sentencia_else','gramaticaC.py',250),
  ('listado_else -> listado_else ifelse','listado_else',2,'p_listado_else','gramaticaC.py',253),
  ('listado_else -> ifelse','listado_else',1,'p_listado_else_','gramaticaC.py',256),
  ('ifelse -> ELSE declaracion_compuesta','ifelse',2,'p_ifelse','gramaticaC.py',259),
  ('ifelse -> ELSE IF ABREPARENTESIS exp CIERRAPARENTESIS declaracion_compuesta','ifelse',6,'p_ifelse_','gramaticaC.py',262),
  ('sentencia_for -> FOR ABREPARENTESIS exp PUNTOCOMA exp PUNTOCOMA exp CIERRAPARENTESIS declaracion_compuesta','sentencia_for',9,'p_sentencia_for','gramaticaC.py',265),
  ('declaracion_struct -> STRUCT IDENTIFICADOR IDENTIFICADOR PUNTOCOMA','declaracion_struct',4,'p_declaracion_struct','gramaticaC.py',268),
  ('declaracion_struct -> STRUCT IDENTIFICADOR IDENTIFICADOR indices PUNTOCOMA','declaracion_struct',5,'p_declaracion_struct_arreglo','gramaticaC.py',271),
  ('sentencia_asignacion_struct -> IDENTIFICADOR PUNTO IDENTIFICADOR IGUAL exp PUNTOCOMA','sentencia_asignacion_struct',6,'p_sentencia_asignacion_struct','gramaticaC.py',274),
  ('sentencia_etiqueta -> IDENTIFICADOR DOSPUNTOS','sentencia_etiqueta',2,'p_sentencia_etiqueta','gramaticaC.py',277),
  ('sentencia_goto -> GOTO IDENTIFICADOR PUNTOCOMA','sentencia_goto',3,'p_sentencia_goto','gramaticaC.py',280),
  ('exp -> exp MAS exp','exp',3,'p_exp','gramaticaC.py',283),
  ('exp -> exp MENOS exp','exp',3,'p_exp','gramaticaC.py',284),
  ('exp -> exp MUL exp','exp',3,'p_exp','gramaticaC.py',285),
  ('exp -> exp DIV exp','exp',3,'p_exp','gramaticaC.py',286),
  ('exp -> exp RESIDUO exp','exp',3,'p_exp','gramaticaC.py',287),
  ('exp -> exp AND exp','exp',3,'p_exp','gramaticaC.py',288),
  ('exp -> exp OR exp','exp',3,'p_exp','gramaticaC.py',289),
  ('exp -> exp XOR exp','exp',3,'p_exp','gramaticaC.py',290),
  ('exp -> exp COMPARACION exp','exp',3,'p_exp','gramaticaC.py',291),
  ('exp -> exp DIFERENTE exp','exp',3,'p_exp','gramaticaC.py',292),
  ('exp -> exp MAYORIGUAL exp','exp',3,'p_exp','gramaticaC.py',293),
  ('exp -> exp MENORIGUAL exp','exp',3,'p_exp','gramaticaC.py',294),
  ('exp -> exp MAYOR exp','exp',3,'p_exp','gramaticaC.py',295),
  ('exp -> exp MENOR exp','exp',3,'p_exp','gramaticaC.py',296),
  ('exp -> exp AMPERSAN exp','exp',3,'p_exp','gramaticaC.py',297),
  ('exp -> exp ORBIT exp','exp',3,'p_exp','gramaticaC.py',298),
  ('exp -> exp XORBIT exp','exp',3,'p_exp','gramaticaC.py',299),
  ('exp -> exp SHIFTIZQ exp','exp',3,'p_exp','gramaticaC.py',300),
  ('exp -> exp SHIFTDER exp','exp',3,'p_exp','gramaticaC.py',301),
  ('exp -> MENOS exp','exp',2,'p_exp_negativo','gramaticaC.py',305),
  ('exp -> ABS ABREPARENTESIS exp CIERRAPARENTESIS','exp',4,'p_exp_absoluto','gramaticaC.py',308),
  ('exp -> NOT exp','exp',2,'p_exp_not','gramaticaC.py',311),
  ('exp -> NOTBIT exp','exp',2,'p_exp_not_bit','gramaticaC.py',314),
  ('exp -> ABREPARENTESIS exp CIERRAPARENTESIS','exp',3,'p_exp_parentesis','gramaticaC.py',317),
  ('exp -> ENTERO','exp',1,'p_exp_num','gramaticaC.py',320),
  ('exp -> DECIMAL','exp',1,'p_exp_num','gramaticaC.py',321),
  ('exp -> IDENTIFICADOR','exp',1,'p_exp_variable','gramaticaC.py',324),
  ('exp -> AMPERSAN IDENTIFICADOR','exp',2,'p_exp_puntero','gramaticaC.py',327),
  ('exp -> IDENTIFICADOR indices','exp',2,'p_exp_array_index','gramaticaC.py',330),
  ('exp -> SIZEOF ABREPARENTESIS exp CIERRAPARENTESIS','exp',4,'p_exp_sizeof','gramaticaC.py',333),
  ('exp -> ABREPARENTESIS tipo_variable CIERRAPARENTESIS exp','exp',4,'p_exp_casteo','gramaticaC.py',336),
  ('exp -> IDENTIFICADOR ABREPARENTESIS CIERRAPARENTESIS','exp',3,'p_exp_funcion','gramaticaC.py',339),
  ('exp -> exp TERNARIO exp DOSPUNTOS exp','exp',5,'p_exp_ternario','gramaticaC.py',342),
  ('exp -> CADENA','exp',1,'p_exp_cadena','gramaticaC.py',345),
  ('params -> param_list','params',1,'p_params','gramaticaC.py',348),
  ('param_list -> param_list COMA param','param_list',3,'p_param_list','gramaticaC.py',351),
  ('param_list -> param','param_list',1,'p_param_list_param','gramaticaC.py',354),
  ('param -> tipo IDENTIFICADOR','param',2,'p_param','gramaticaC.py',357),
  ('param -> tipo IDENTIFICADOR ABRECORCHETE CIERRACORCHETE','param',4,'p_param','gramaticaC.py',358),
  ('indices -> indices indice','indices',2,'p_indices_listado','gramaticaC.py',361),
  ('indices -> indice','indices',1,'p_indices','gramaticaC.py',367),
  ('indice -> ABRECORCHETE exp CIERRACORCHETE','indice',3,'p_indice','gramaticaC.py',372),
  ('tipo -> INT','tipo',1,'p_tipo','gramaticaC.py',377),
  ('tipo -> VOID','tipo',1,'p_tipo','gramaticaC.py',378),
  ('tipo -> CHAR','tipo',1,'p_tipo','gramaticaC.py',379),
  ('tipo -> DOUBLE','tipo',1,'p_tipo','gramaticaC.py',380),
  ('tipo -> FLOAT','tipo',1,'p_tipo','gramaticaC.py',381),
  ('tipo_variable -> INT','tipo_variable',1,'p_tipo_variable','gramaticaC.py',384),
  ('tipo_variable -> FLOAT','tipo_variable',1,'p_tipo_variable','gramaticaC.py',385),
  ('tipo_variable -> CHAR','tipo_variable',1,'p_tipo_variable','gramaticaC.py',386),
  ('tipo_variable -> DOUBLE','tipo_variable',1,'p_tipo_variable','gramaticaC.py',387),
  ('asignacion_compuesta -> IGUAL','asignacion_compuesta',1,'p_asignacion_compuesta','gramaticaC.py',394),
  ('asignacion_compuesta -> INCREMENTO','asignacion_compuesta',1,'p_asignacion_compuesta','gramaticaC.py',395),
  ('asignacion_compuesta -> DECREMENTO','asignacion_compuesta',1,'p_asignacion_compuesta','gramaticaC.py',396),
  ('asignacion_compuesta -> MULTIPLYAND','asignacion_compuesta',1,'p_asignacion_compuesta','gramaticaC.py',397),
  ('asignacion_compuesta -> DIVIDEAND','asignacion_compuesta',1,'p_asignacion_compuesta','gramaticaC.py',398),
  ('asignacion_compuesta -> MODULUSAND','asignacion_compuesta',1,'p_asignacion_compuesta','gramaticaC.py',399),
  ('asignacion_compuesta -> LEFTSHIFTAND','asignacion_compuesta',1,'p_asignacion_compuesta','gramaticaC.py',400),
  ('asignacion_compuesta -> RIGHTSHIFTAND','asignacion_compuesta',1,'p_asignacion_compuesta','gramaticaC.py',401),
  ('asignacion_compuesta -> BITWISEAND','asignacion_compuesta',1,'p_asignacion_compuesta','gramaticaC.py',402),
  ('asignacion_compuesta -> BITWISEEXCLUSIVE','asignacion_compuesta',1,'p_asignacion_compuesta','gramaticaC.py',403),
  ('asignacion_compuesta -> BITWISEINCLUSIVE','asignacion_compuesta',1,'p_asignacion_compuesta','gramaticaC.py',404),
]
