int a,b,c,d;
int e,f,g,h=10;
char c;
double d;
float f;

struct punto 
{
    int x,y;
};

void main(int a){
    int m1[5][2][3];
    //int m2[3] ={0,1,2};
    m1[3][2][3] = m2[2][10];    
    a = 20;
    struct punto 
    {
        int x,y;
    };
    struct punto puntos[3];
    struct punto mipunto;
    mipunto.x = 43;
    mipunto.y = 24;
    int i;
    i = 20+10+20;
}



int routes(char c){
    double z;
    b = abs(20);
    c = -1;
    e = 10*b;
    D1_20 = 20-10;
}

void funcion1(){
    int a = 10;
    p1 = &a;
    p2 = &p1;
    p3 = p1;
    a += 1;
    a -= 1;
    a *= 1;
    a /= 1;
    a %= 1;
    a <<= 1;
    a >>= 1;
    a &= 1;
    a ^= 1;
    a |= 1;
}

void funcion2(){
    a = "20";
    if(a==10){
        int a;
        goto etiqueta1;
    }else if(a=="20"){
        int b;
    }else{
        int c = 10;
    }

    etiqueta1:
        int a = 10;
        switch(a){
            case '20':
                int c = 20;
                break;
            default:
                int b = 20;
                break;
        }
    
}

int suma(int a,b){
    printf("esto es un print",2,12.4);
    return suma(a,b);
}

int funcion4(){
    int x = 0;
    int a = 0;
    while(x<4){
        a = a +x;
        x = x +1;
    }
    printf("%d",a);
}


int f2(int a){
    return a*a;
}

int f1(int a){
    int a=10,b=20;
    a = suma(suma(10,20),suma(1,2));
    printf("%d",fact(3));
    return f2(a);
}

int resolver(){
    int a = 5;
    a = f1(a);
    printf("%d",a);
}

int fact(int a){
    if (a>1){
        return a*fact(a-1);
    }
    return 1;
}

char funcion3(){
    while(a>20){
        int a;
    }
    int z = 5;
    do{
        a = 20;
        z -= 1;
    } while(z > 0);


    for( int y = 0; a>20; y+=1)
    {
        a = 25;
    }

    for(y = 0; a>20; y+=1)
    {
        a = 25;
        for(y = 0; a>20; y+=1)
        {
            a = 25;
        }
    }

    if(a<10){
        int a;
    }

    if(b!=10){
        int c;
    }
    else{
        int q;
    }
}

struct estructura{
    int x,y;
};

int funcion5(){
    int arr2[3] = {1,2,3};
    estructura lista[2];
    lista[0].x = 0;
    lista[0].y = 0;
    lista[1].x = 5;
    lista[1].y = 5;
    printf(lista.x);
    printf(lista[0].x,lista[0].y);
    // printf(lista[1].x,lista[1].y);
}